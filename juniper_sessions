#!/usr/bin/python

# OIDs used:
# JUNIPER-MIB::jnxJsSPUMonitoringObjectsTable     .1.3.6.1.4.1.2636.3.39.1.12.1.1.1
# JUNIPER-MIB::jnxOperatingDescr    		  .1.3.6.1.4.1.2636.3.1.2.0

# Scan function looks for 'Juniper' in jnxBoxDescr

# Author: Ruud Vander velpen

juniper_session_levels = (200000,220000)

def inventory_juniper_sessions(info):
    inventory = []
    for line in info:
        inventory.append((line[2], "juniper_session_levels"))
    return inventory

def check_juniper_sessions(item, params, info):
    for cses, mses, node in info:
        warn,crit = params
        if item == node:
            cses = int(cses)
            perfdata = [ ( "ses", cses, warn, crit, "", mses) ]
            if cses >= crit:
                return (2, "CRIT - Sessions above (%s): %s/%s" % (crit,cses,mses), perfdata)
            elif cses >= warn:
                return (1, "WARN - Sessions above (%s): %s/%s" % (crit,cses,mses), perfdata)
            else:
                return (0, "OK - Sessions: %s/%s" % (cses,mses), perfdata)
    return (3, "UNKNOWN")

check_info["juniper_sessions"] = {
    "check_function"        : check_juniper_sessions,
    "inventory_function"    : inventory_juniper_sessions,
    "service_description"   : "Sessions %s",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: "Juniper" in oid(".1.3.6.1.4.1.2636.3.1.2.0"),
    "snmp_info"             : ( ".1.3.6.1.4.1.2636.3.39.1.12.1.1.1", [6, 7, 11]),
}
